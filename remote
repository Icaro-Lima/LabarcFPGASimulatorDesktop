# Establish a ssh tunnel to the computer which has the FPGA board
# connected to it and start the GUI

if [ $# -ne 2 ]; then
  echo "Usage: $0 host FPGA"
  echo "  host is the name of a computer located in LAD"
  echo "  FPGA is the number of the FPGA connected to this computer"
  exit
fi
# calculate the socket port from the FPGA number
port=$(expr $2 + 2540)

# check if a tunnel with the same port exists and destroy it 
p=$( ps x | grep "ssh " | grep $port: | cut -b-7 )
[[ ! -z "$p" ]] && kill -9 $p && sleep 1

# establish the tunnel
ssh -p23456 -L$port:$1:$port labarc01@lad.dsc.ufcg.edu.br -N &
ssh_pid=$!
sleep 0.4
# experimentallly determined minimum delay for tunnel to get established

./remote.bin $port      # make first attempt to start the GUI
if [ $? -eq 8 ]; then   # if GUI exits with Connection refused exception
   sleep 2              # additional delay for tunnel to get established
   ./remote.bin $port   # make second attempt start the GUI

   if [ $? -ge 8 ]; then    # again an exception
      if ps h -p $ssh_pid >/dev/null; then  # tunnel process active?
        echo "Erro: connexão remota com a placa FPGA indisponível"
        echo "Tente fazer novamente upload do top.sv"
      else
        # the tunnel command has exited
        echo "Caso apareceu \" Permission denied\","
        echo "verifique se você enviou o seu arquivo ~/.ssh/id_rsa.pub"
        echo "para o professor. Caso sim, peça ele verificar se ele cadastrou"
        echo "o mesmo corretamente."
      fi
   fi
fi

kill -9 $ssh_pid  # destroy the tunnel

