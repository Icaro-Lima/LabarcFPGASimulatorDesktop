#!/bin/bash

# make sure there is at least one tmp directory so ls will not fail
mkdir -p sim/tmp.0

while : ; do # infinite loop
  # get a directory to work on
  for i in {1..10}; do
   # set d to the i-th last tmp directory
   d=$(ls -1dt sim/tmp.* | head -$i | tail -1)
   # is there exactly one file in it ?
   if [ "`ls -1 $d | wc -w`" == "1" ]; then
      if test -f $d/*.zip; then
         (cd $d; unzip *.zip &>/dev/null)
         if test -f $d/top.sv; then
            tail -1 $(ls -1t $d/*.zip | head -1) >> $d/top.sv 2>>/dev/null
         fi
      fi
      cp /labarc/TOP/Make* $d
      if test -f $(ls -1t $d/*.sv | head -1); then
         c=$(grep -h parameter $d/*.sv | grep divide_by | head -1 | grep -oP '(?<!\d)\d*(?!\d)' )
         (cd $d; DIVIDE_BY=$c timeout 3600 make sim 1>/dev/null 2>qq.log) &
      else
         if test -f $d/*.101; then
            (cd $d
             echo "<span style=color:blue>rodar o simulador com processador completo e pronto já compilado</span>" >>qq.log
             echo "<span style=color:blue>No início da simulação, o arquivo inst.101 é lido.</span>" >>qq.log
             timeout 3600 /labarc/util/RISCV_sim 2>>qq.log 1>&2) &
         else
            (cd $d
             make inst.objdump >>qq.log
             echo "<span style=color:blue>rodar o simulador com processador completo e pronto já compilado</span>" >>qq.log
             echo "<span style=color:blue>No início da simulação, o arquivo inst.objdump é lido.</span>" >>qq.log
             timeout 3600 /labarc/util/RISCV_sim 2>>qq.log 1>&2) &
         fi
      fi
   fi
  done
  sleep 2
done
