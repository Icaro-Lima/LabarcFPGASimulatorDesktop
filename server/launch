#!/bin/bash
# argument: cable number starting at 0

# make sure there is at least one tmp directory so ls will not fail
mkdir -p syn/tmp.0

function qr () {
   # if top.sv does not exist, create it only to put uploaded IP into it
   if ip=$(compgen -G *.zip) || ip=$(compgen -G *.c) || ip=$(compgen -G *.s) || ip=$(compgen -G *.101); then
     tail -1 $ip >> top.sv 2>/dev/null
   fi
   timeout 450 quartus_stp -t /labarc/util/qr.tcl $1 1>/dev/null 2>>qq.log
}

function qinst () {
   quartus_stp -t /labarc/util/inst.tcl $2 $1 | egrep --line-buffered "(Error|Running|successful)" >> qq.log
}

while : ; do # infinite loop
  # get a directory to work on
  while ! d=$(curl -s lad:2525); do sleep 5; done
  if [[ $d = *[![:space:]]* ]]; then
    cd $d
    if compgen -G top.sv >/dev/null; then
       if CABLE=$(expr $1 + 1) make > qq.log ; then
           if b=$(compgen -G *.101); then
              qinst $1 $b && qr $1	   
           elif compgen -G *.[cs]* >/dev/null; then
              make inst.objdump >> qq.log && qinst $1 inst.objdump && qr $1
           else
              qr $1
           fi
       fi
    else
       echo "<span style=color:blue>configure the FPGA with the complete RISC-V RV32I processor that has already been synthesized</span>" >qq.log
       /usr/local/bin/jtagcheck
       if jtagconfig | grep --quiet SoC; then
         p=RISCV_SOC
       else
         p=RISCV
       fi
       if quartus_pgm -c$(expr $1 + 1) /labarc/RISCV/$p.cdf | egrep --line-buffered "(Error|Running|successful)" >> qq.log ; then
           if b=$(compgen -G *.101); then
              qinst $1 $b && qr $1	   
	   elif compgen -G *.[cs]* >/dev/null; then
              make inst.objdump >> qq.log && qinst $1 inst.objdump && qr $1
           else
              echo "<span style=color:blue>Fatal error: neither hardware nor software uploaded</span>" >qq.log
           fi 
       fi
    fi
    echo "___________________finished____________________" >> qq.log
    cd
  else
    sleep 5
  fi
done
